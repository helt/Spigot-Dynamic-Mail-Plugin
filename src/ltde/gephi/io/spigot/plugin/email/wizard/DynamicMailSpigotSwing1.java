/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DynamicMailSpigotSwing1.java
 *
 * Created on 05.10.2011, 11:26:16
 */
package ltde.gephi.io.spigot.plugin.email.wizard;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.filechooser.FileFilter;
import ltde.gephi.io.spigot.plugin.email.DynamicMailSpigot;
import org.gephi.io.importer.spi.SpigotImporter;
import org.gephi.io.spigot.plugin.email.spi.EmailFilesFilter;
import org.openide.util.Lookup;

/**
 *
 * @author Hendrik
 */
public class DynamicMailSpigotSwing1 extends JPanel {
    java.io.File[] parsedFiles = null;

//    private final DynamicMailWizardPanel1 _wizardPanel;
    DynamicMailSpigotSwing1() {
        initComponents();
    }

//    DynamicMailSpigotSwing1(DynamicMailWizardPanel1 aThis) {
//        _wizardPanel = aThis;
//        _wizardPanel.addChangeListener(this);
//        initComponents();
//
//    }
    public void unsetup(SpigotImporter importer) {
        DynamicMailSpigot currentImporter = (DynamicMailSpigot) importer;

        currentImporter.setFiles(parsedFiles);
        //set cc line
        currentImporter.setCcAsWeight(jCheckBoxUseCcLine.isSelected());
        //set bcc line
        currentImporter.setBccAsWeight(jCheckBoxUseBccLine.isSelected());
        //set display name as the same node
//        currentImporter.setUseOneNodeIfSameDisplayName(jCheckBoxDisplayNameSameLabel.isSelected());

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jCheckBoxUseCcLine = new javax.swing.JCheckBox();
        jCheckBoxUseBccLine = new javax.swing.JCheckBox();
        jCheckBoxDisplayNameSameLabel = new javax.swing.JCheckBox();

        jButton1.setText(org.openide.util.NbBundle.getMessage(DynamicMailSpigotSwing1.class, "DynamicMailSpigotSwing1.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBoxUseCcLine.setText(org.openide.util.NbBundle.getMessage(DynamicMailSpigotSwing1.class, "DynamicMailSpigotSwing1.jCheckBoxUseCcLine.text")); // NOI18N

        jCheckBoxUseBccLine.setText(org.openide.util.NbBundle.getMessage(DynamicMailSpigotSwing1.class, "DynamicMailSpigotSwing1.jCheckBoxUseBccLine.text")); // NOI18N
        jCheckBoxUseBccLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxUseBccLineActionPerformed(evt);
            }
        });

        jCheckBoxDisplayNameSameLabel.setSelected(true);
        jCheckBoxDisplayNameSameLabel.setText(org.openide.util.NbBundle.getMessage(DynamicMailSpigotSwing1.class, "DynamicMailSpigotSwing1.jCheckBoxDisplayNameSameLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxDisplayNameSameLabel)
                    .addComponent(jCheckBoxUseBccLine)
                    .addComponent(jCheckBoxUseCcLine)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxUseCcLine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxUseBccLine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBoxDisplayNameSameLabel)
                .addContainerGap(168, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
        fileChooser.setMultiSelectionEnabled(true);
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnValue = fileChooser.showOpenDialog(this);
        if (returnValue == javax.swing.JFileChooser.APPROVE_OPTION) {
            parsedFiles = fileChooser.getSelectedFiles();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBoxUseBccLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxUseBccLineActionPerformed

        // TODO add your handling code here:}//GEN-LAST:event_jCheckBoxUseBccLineActionPerformed
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBoxDisplayNameSameLabel;
    private javax.swing.JCheckBox jCheckBoxUseBccLine;
    private javax.swing.JCheckBox jCheckBoxUseCcLine;
    // End of variables declaration//GEN-END:variables
}
